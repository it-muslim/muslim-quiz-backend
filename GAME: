GAME:

###########
/checking that question is last in the round

isQuestionLast = quiz.questions.last == quiz.id
if (isQuestionLast)
	roundUserInfo.endDate = Date() # enddate for last question

###########
/checking that round last in the game

isRoundLast = game.rounds.last == round_id
if (partnetFinished && isRoundLast):
	game.endDate = Date() # enddate for game

###########
/give_up
header body
{
	auth-token:
}
request body
{
	game_id
}

user_id = header body -> user_id
game_id = request body -> user_id

game = dbStore.games(game_id)
game.endDate = Date()
game.rounds.each {
	round.users(user_id).isGivenUp = true
	round.endDate = Date()
}


###########
/games
header body
{
	auth-token:
}
request body
{
	completed
}

completed = request body -> completed
initiator = request body -> user_id
games = dbStore.games.filted(intiator, completed)



ROUND:
isCorrect = ifCorrect(answer_id, answers):
	return answers.first.id == answer_id

calculateScore(...):
partnetFinished(...)